// Aquí generamos nuevas clases utils o añadimos alguna funcionalidad nueva a las clases de bootstrap
// Resumen de funciones y clases en este archivo:

// - Variables globales para imágenes de fondo.
// - Configuración de fuentes para escritorio.
// - Clases de tamaño de fuente para diversos elementos y pantallas.
// - Clases de posición absoluta y relativa para pantallas medianas.
// - Clases de aspecto para diferentes elementos y tamaños de pantalla.
// - Clases de utilidad para imágenes de fondo y colores.
// - Clases de espacio para relleno inicial en pantallas medianas y grandes.
// - Clases de opacidad para ajustar la transparencia de elementos.


:root {
	// usar la clase bg-image y llamar a este root en el style para añadir la imagen
	--bg-image: "";
	--bg-md-image: "";
}

/*  Configuración fuentes Desktop */

$display-font-sizes-md: (
	1: $cor-display-font-sizes-1-md,
	2: $cor-display-font-sizes-2-md,
	3: $cor-display-font-sizes-3-md,
	4: $cor-display-font-sizes-4-md,
	5: $cor-display-font-sizes-5-md,
	6: $cor-display-font-sizes-6-md,
);
$headings-sizes-md: (
	1: $cor-h1-font-size-md,
	2: $cor-h2-font-size-md,
	3: $cor-h3-font-size-md,
	4: $cor-h4-font-size-md,
	5: $cor-h5-font-size-md,
	6: $cor-h6-font-size-md,
);
$font-sizes-md: (
	1: $cor-font-size-base-1-md,
	2: $cor-font-size-base-2-md,
	3: $cor-font-size-base-3-md,
	4: $cor-font-size-base-4-md,
	5: $cor-font-size-base-5-md,
	6: $cor-font-size-base-6-md,
);

@each $size, $value in $display-font-sizes-md {
	.display-#{$size} {
		font-family: $cor-font-family-headings;
		@include media-breakpoint-up(md) {
			font-size: $value !important;
		}
	}
}

@each $size, $value in $font-sizes {
	.h#{$size},
	h#{$size} {
		font-family: $cor-font-family-headings;
		@include title($size);
		font-size: $value;
	}
}

@each $size, $value in $headings-sizes-md {
	.h#{$size},
	h#{$size} {
		@include media-breakpoint-up(md) {
			font-size: $value;
		}
	}
}

@each $size, $value in $font-sizes-md {
	.fs-#{$size} {
		@include media-breakpoint-up(md) {
			font-size: $value !important;
		}
	}
}

.fs-btn {
	font-weight: $font-weight-bold;
	font-size: $cor-btn-font-size;
	@include media-breakpoint-up(md) {
		font-size: $cor-btn-font-size-md;
	}
}
// .fs-table {
// 	font-weight: $font-weight-bold;
// 	font-size: $cor-font-table;
// 	margin-bottom: 0;
// 	margin-right: $spacer * 0.25;
// 	@include media-breakpoint-up(md) {
// 		font-weight: $font-weight-normal;
// 		font-size: $cor-font-table-md;
// 		opacity: 0.6;
// 	}
// }

.legend {
	font-size: $cor-font-legend;
	@include media-breakpoint-up(md) {
		font-size: $cor-font-legend-md;
	}
}
.tag {
	font-size: $cor-font-tag;
	font-weight: $font-weight-medium;
	@include media-breakpoint-up(md) {
		font-size: $cor-font-tag-md;
	}
}

@each $size, $value in $display-font-sizes-md {
	.display-md-#{$size} {
		@include media-breakpoint-up(md) {
			font-size: $value !important;
		}
	}
}

@each $size, $value in $font-sizes-md {
	.fs-md-#{$size} {
		@include media-breakpoint-up(md) {
			font-size: $value !important;
			text-transform: initial;
		}
	}
}

@each $size, $value in $headings-sizes-md {
	.st-h#{$size} {
		@include title($size);
	}
}

.object-fit-contain {
	object-fit: contain;
}

.bg-image {
	@include bg-image();
	background-image: var(--bg-image);
}

.bg-md-image {
	@include media-breakpoint-up(md) {
		@include bg-image();
		background-image: var(--bg-md-image);
	}
}
.bg-md-cream {
	@include media-breakpoint-up(md) {
		background-color: $cor-cream;
	}
}

.w-max {
	width: max-content;
}

.h-max {
	height: max-content;
}

.position-md-absolute {
	@include media-breakpoint-up(md) {
		position: absolute;
	}
}

.position-md-relative {
	@include media-breakpoint-up(md) {
		position: relative;
	}
}

.aspect-services {
	aspect-ratio: 1/1;
	object-fit: cover;
	width: 100%;
	@include media-breakpoint-up(md) {
		aspect-ratio: 1/1;
	}
}

.aspect-projects {
	aspect-ratio: 1;
	object-fit: cover;
	width: 100%;
	border-radius: 20px;

	@include media-breakpoint-up(md) {
		aspect-ratio: 4/5;
	}
}

.aspect-checks {
	aspect-ratio: 21.5/20;
	object-fit: cover;
	@include media-breakpoint-up(md) {
		aspect-ratio: 44/ 39;
	}
}
.aspect-banner {
	aspect-ratio: 20.5/26.5;
	object-fit: cover;
	@include media-breakpoint-up(md) {
		aspect-ratio: 87/ 40;
	}
}
.aspect-blog {
	aspect-ratio: 20.5/9.25;
	object-fit: cover;
	@include media-breakpoint-up(md) {
		aspect-ratio: 37.75/ 25.4;
	}
}
.aspect-post {
	aspect-ratio: 21.5/ 20.3;
	object-fit: cover;
	@include media-breakpoint-up(md) {
		aspect-ratio: 57.8125/41.25;
	}
}
.aspect-newsletter {
	aspect-ratio: 20.5/22.4;
	object-fit: cover;
	@include media-breakpoint-up(md) {
		aspect-ratio: 1347/ 380;
	}
}

.overlay-image {
	position: relative;
	top: -160px; 
	z-index: 10; 
}

// Restar medida padding a las columnas
.p-md-ini {
	@include media-breakpoint-up(md) {
		padding: 0 $container-padding-x * 0.5 !important;
	}
}
.px-md-ini {
	@include media-breakpoint-up(md) {
		padding-left: $container-padding-x * 0.5 !important;
		padding-right: $container-padding-x * 0.5 !important;
	}
}
.px-lg-ini {
	@include media-breakpoint-up(lg) {
		padding-left: $container-padding-x * 0.5 !important;
		padding-right: $container-padding-x * 0.5 !important;
	}
}

.opacity-80 {
	opacity: 0.8;
}
.opacity-60 {
	opacity: 0.6;
}
.opacity-30 {
	opacity: 0.3;
}
.h-header{
	height: calc(100vh - $header * 1rem);
	max-height: 100%;
}

$chat-tex-area : toRem(107) * 1rem;
$chat-title : toRem(73) * 1rem;

.h-chat{
	height: calc(100vh - $header * 1rem - $chat-tex-area - $chat-title );
	max-height: 100%;
	overflow-y: scroll;
}

.overflow-clip{
	overflow:clip;
}

